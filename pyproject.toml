[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "airaware"
version = "0.1.0"
description = "Production-Grade PM2.5 Nowcasting for Kathmandu Valley"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "pandas>=2.2",
    "numpy>=1.26",
    "pyarrow>=15",
    "requests>=2.32",
    "xarray>=2024.1",
    "netCDF4>=1.6",
    "pydantic>=2.8",
    "hydra-core>=1.3",
    "mlflow>=2.14",
    "optuna>=3.6",
    "properscoring>=0.1",
    "torch>=2.2",
    "pytorch-lightning>=2.2",
    "darts>=0.30",
    "fastapi>=0.112",
    "uvicorn>=0.30",
    "streamlit>=1.36",
    "langgraph>=0.2",
    "pytest>=8",
    "pytest-cov>=5",
    "ruff>=0.5",
    "mypy>=1.10",
    "cdsapi>=0.7.4",
    "python-dotenv>=1.0",
    "typer>=0.9",
    "rich>=13.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0",
    "jupyter>=1.0",
    "matplotlib>=3.7",
    "seaborn>=0.12",
]

[tool.setuptools.packages.find]
include = ["airaware*"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.isort]
known-first-party = ["airaware"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "darts.*",
    "mlflow.*",
    "optuna.*",
    "properscoring.*",
    "cdsapi.*",
    "langgraph.*",
    "netCDF4.*",
    "xarray.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=airaware",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=60",
]

[tool.coverage.run]
source = ["airaware"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

